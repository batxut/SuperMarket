<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:context="http://www.springframework.org/schema/context"	
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
   http://www.springframework.org/schema/aop 
   http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
   http://www.springframework.org/schema/tx
   http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
   http://www.springframework.org/schema/jee
   http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
   http://www.springframework.org/schema/context
   http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	<!-- dataSource config -->
	<!-- 数据源配置 -->
	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		
		<property name="url"
			value="jdbc:mysql://127.0.0.1:3306/super_market?useUnicode=true&amp;charaterEncoding=utf-8;" />
		<property name="username" value="root" />
		<property name="password" value="root" />
	</bean>
	<!-- sessionFactory配置 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<!-- 配置hibernate二级缓存 -->
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<!-- 配置二级缓存具体的配置类 -->	
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
			</props>
		</property>
		<!-- 通过文件目录指明hbm.xml文件位置 -->
		<!-- Hibernate会通过此类文件将JavaBean与对应的数据表做好映射 -->
		<property name="mappingDirectoryLocations">
			<list>
				<value>classpath:/com/love/model</value>
			</list>
		</property>
	</bean>
	
	
	<!-- 配置事务管理器
        (理论上可配置多个transactionManager来适应多个数据源-不过不能是同一ID) -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>	
	
	<!--
		对事务管理器进行事务设置。增加如下代码： 这里创建了一个advice(通知)，对事务管理器进行事务设置，这里意思是指，
		对于以save、del、update开头的方法应用事务。
	-->
	<tx:advice id="smAdvice" transaction-manager="transactionManager">
		<!-- 设置事务传播属性 -->
		<tx:attributes>
			<tx:method name="find*" read-only="true" />
			<tx:method name="query*" read-only="true" />
			<tx:method name="save*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="add*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="del*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="remove*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="edit*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
		</tx:attributes>
	</tx:advice>
	
	
	<!-- 下面就把事务应用到具体的类  -->
	<aop:config>
		<!--
			<aop:pointcut id="smMethod" expression="execution(*
			avatar.app.cost.buz.impl.*.*(..))"/>
		-->
		<!-- 
		<aop:pointcut id="smMethod" expression="execution(* com.hy.dao.daoImpl.*.*(..))" />
		 -->
		 <aop:pointcut id="smMethod" expression="execution(* com.hy.service.serviceImpl.*.*(..))" />
		<aop:advisor pointcut-ref="smMethod" advice-ref="smAdvice" />
	</aop:config>
	
	<!-- 使用annotation 扫描机制注册bean --><!--
    <context:component-scan base-package="com.hy.**">
        <context:exclude-filter expression="org.springframework.stereotype.Controller" type="annotation" />
    </context:component-scan>
	
		--><!-- 以下配置使用 hibernateTemplate-->
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>	
	
</beans>